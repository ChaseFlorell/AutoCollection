#nullable disable
using System;
using AutoCollection.UnitTests.Models;
using Shouldly;
using Xunit;

namespace AutoCollection.UnitTests;
public class ListGeneratorTests
{
	[Fact]
	public void GivenDefaultAutoGeneratedList_WhenInstantiated_ThenItShouldNotThrow()
	{
		// arrange, act
		var act = () => new SimpleStringList(["one", "two", "three",]);

		// assert
		act.ShouldNotThrow()
		   .ShouldSatisfyAllConditions(sut =>
		   {
			   sut.Count.ShouldBe(3);
			   sut[0].ShouldBe("one");
			   sut[1].ShouldBe("two");
			   sut[2].ShouldBe("three");
		   });
	}

	[Fact]
	public void GivenDefaultAutoGeneratedList_WhenInstantiatedWithNull_ThenItShouldThrow()
	{
		// arrange, act
		var act = () => new SimpleStringList(null);

		// assert
		act.ShouldThrow<ArgumentNullException>()
		   .Message
		   .ShouldBe("Value cannot be null. (Parameter 'items')");
	}

	[Fact]
	public void GivenCustomAutoGeneratedList_WhenInstantiated_ThenItShouldNotThrow()
	{
		// arrange, act
		var act = () => new CustomIntList([1, 2, 3,]);

		// assert
		act.ShouldNotThrow()
		   .ShouldSatisfyAllConditions(sut =>
		   {
			   sut.Count.ShouldBe(3);
			   sut[0].ShouldBe(1);
			   sut[1].ShouldBe(2);
			   sut[2].ShouldBe(3);
		   });
	}

	[Fact]
	public void GivenCustomAutoGeneratedList_WhenInstantiatedWithNull_ThenItShouldThrow()
	{
		// arrange, act
		// ReSharper disable once AssignNullToNotNullAttribute
		var act = () => new CustomIntList(null);

		// assert
		act.ShouldThrow<ArgumentNullException>()
		   .Message
		   .ShouldBe("Value cannot be null. (Parameter 'vals')");
	}
}