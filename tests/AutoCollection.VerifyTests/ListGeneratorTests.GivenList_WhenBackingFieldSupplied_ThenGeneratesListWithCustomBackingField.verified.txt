//--------------------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//--------------------------------------------------------------------------------------------------
using System.Collections;
using System.Collections.Generic;
using System.Linq;

namespace Example
{
	public partial class DemoClass : IList<string>
	{
		/// <inheritdoc cref="IList{T}" />
		public IEnumerator<string> GetEnumerator() => _specialItems.GetEnumerator();

		/// <inheritdoc cref="IList{T}"  />
		IEnumerator IEnumerable.GetEnumerator() => GetEnumerator();

		/// <inheritdoc  cref="IList{T}" />
		public void Add(string item) => _specialItems.Add(item);

		/// <inheritdoc cref="IList{T}" />
		public void Clear() => _specialItems.Clear();

		/// <inheritdoc  cref="IList{T}" />
		public bool Contains(string item) => _specialItems.Contains(item);

		/// <inheritdoc  cref="IList{T}" />
		public void CopyTo(string[] array, int arrayIndex) => _specialItems.CopyTo(array, arrayIndex);

		/// <inheritdoc  cref="IList{T}" />
		public bool Remove(string item) => _specialItems.Remove(item);

		/// <inheritdoc  cref="IList{T}" />
		public int Count => _specialItems.Count;

		/// <inheritdoc  cref="IList{T}" />
		public bool IsReadOnly => _specialItems.IsReadOnly;

		/// <inheritdoc cref="IList{T}" />
		public int IndexOf(string item) => _specialItems.IndexOf(item);

		/// <inheritdoc cref="IList{T}" />
		public void Insert(int index, string item) => _specialItems.Insert(index, item);

		/// <inheritdoc cref="IList{T}" />
		public void RemoveAt(int index) => _specialItems.RemoveAt(index);

		/// <inheritdoc cref="IList{T}" />
		public string this[int index]
		{
			get => _specialItems[index];
			set => _specialItems[index] = value;
		}
	}
}